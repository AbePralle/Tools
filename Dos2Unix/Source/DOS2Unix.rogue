#===============================================================================
# DOS2Unix.rogue
# October 2, 2020
#===============================================================================
$requireRogue "1.7.6"

uses Utility/CommandLineParser

DOS2Unix( System.command_line_arguments )

class DOS2Unix
  METHODS
    method init( args:String[] )
      local command = CommandLineParser().
      [
        add( Option("--help").alias("-h").alias("-?") )
        on_unknown( this=>invalid_option )
      ].parse( args )

      if (command//options//help)
        print_usage
      endIf

      if (not command//args) command.ensure_list( "args" ).add( "**" )

      forEach (arg in command//args.to_list<<String>>)
        if (File.exists(arg))
          convert( arg )
        else
          forEach (filepath in File.listing(arg,&ignore_hidden))
            convert( filepath )
          endForEach
        endIf
      endForEach

    method convert( filepath:String )
      local content = File.load_as_string( filepath )
      if (content.contains("\r"))
        println "FIX " + filepath
        File.save( filepath, content.replacing("\r\n","\n") )
      else
        println "OK  " + filepath
      endIf

    method invalid_option( parser:CommandLineParser )
      println "=" * 80
      println "ERROR"
      println
      println "Invalid option: $" (parser.arg)
      println "=" * 80
      print_usage( 1 )

    method print_usage( exit_code=0:Int32 )
      println @|USAGE
               |  dos2unix [filepath1 filepath2 ...]
               |
               |OPTIONS
               |  --help, -h, -?
               |    Print this help text.
               |
               |WILDCARD PATTERNS
               |  Put patterns in quotes to ensure that LSTree's non-standard wildcard patterns
               |  are correctly processed. By example:
               |    "*"            # All files in current folder
               |    "**"           # All files, recursively
               |    "**/*.rogue"   # All .rogue files, recursively
               |  Finally, '?' can be used to match any single character.
      System.exit( exit_code )
endClass

